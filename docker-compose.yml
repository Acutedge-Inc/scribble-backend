version: "3.8"

services:
  mongo1:
    image: mongo:latest
    container_name: mongo1
    restart: always
    ports:
      - "27017:27017" # Internal
      - "27018:27017" # External Access
    command:
      [
        "mongod",
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--keyFile",
        "/data/mongo-keyfile",
      ]
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
    volumes:
      - mongo1_data:/data/db
      - ./mongo-keyfile:/data/mongo-keyfile

  mongo2:
    image: mongo:latest
    container_name: mongo2
    restart: always
    ports:
      - "27019:27017" # External Access
    command:
      [
        "mongod",
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--keyFile",
        "/data/mongo-keyfile",
      ]
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
    volumes:
      - mongo2_data:/data/db
      - ./mongo-keyfile:/data/mongo-keyfile

  mongo3:
    image: mongo:latest
    container_name: mongo3
    restart: always
    ports:
      - "27020:27017" # External Access
    command:
      [
        "mongod",
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--keyFile",
        "/data/mongo-keyfile",
      ]
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
    volumes:
      - mongo3_data:/data/db
      - ./mongo-keyfile:/data/mongo-keyfile

  mongo-init:
    image: mongo:latest
    container_name: mongo-init
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    entrypoint: >
      bash -c "
      echo 'Waiting for MongoDB to be ready...';
      until mongosh --host <PUBLIC_IP>:27017 -u admin -p adminpassword --authenticationDatabase admin --eval 'db.adminCommand(\"ping\")' > /dev/null 2>&1;
      do sleep 5; done;
      echo 'MongoDB is up. Initializing replica set...';
      mongosh --host <PUBLIC_IP>:27017 -u admin -p adminpassword --authenticationDatabase admin --eval '
      rs.initiate({
        _id: \"rs0\",
        members: [
          { _id: 0, host: \"<PUBLIC_IP>:27017\" },
          { _id: 1, host: \"<PUBLIC_IP>:27019\" },
          { _id: 2, host: \"<PUBLIC_IP>:27020\" }
        ]
      })'
      "

  scribble-api:
    build: .
    container_name: scribble-api
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - mongo-init
    environment:
      MONGO_URI: "mongodb://admin:adminpassword@<PUBLIC_IP>:27017,<PUBLIC_IP>:27019,<PUBLIC_IP>:27020/ADMIN_DB?authSource=admin&replicaSet=rs0"

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
