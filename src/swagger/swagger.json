{
  "openapi": "3.0.0",
  "info": {
    "title": "Scribble API spec",
    "version": "1.0"
  },
  "servers": [],
  "tags": [
    {
      "name": "Auth",
      "description": "Used by user to create user & login to system"
    }   
  ],
  "paths": {
    "/v1/auth/login": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "description": "Perform federated user authentication. This returns an extended user model with added apiKey property to use for allother requests. Basically it is login api for web portal(dev). There are 2 ways to login. 1. Email Login 2. VIN login. For VIN login, Client will get the jwt from routing server and attach it in the header using which we are going to login the user",
        "operationId": "POST_v1-auth-basic",
        "parameters": [
        {
          "in": "header",
          "name": "content-type",
          "schema": {
            "type": "string",
            "example": "application/json"
          },
          "required": true
        },
        {
          "in": "header",
          "name": "x-tenant-id",
          "schema": {
            "type": "string",
            "example": "67a962c84aa8bc0e4063589e"
          },
          "required": false,
          "description": "Tenant ID (optional)"
        }
      ],

      "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/auth/tenant": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantResponse"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "description": "Perform federated user authentication. This returns an extended user model with added apiKey property to use for allother requests. Basically it is login api for web portal(dev). There are 2 ways to login. 1. Email Login 2. VIN login. For VIN login, Client will get the jwt from routing server and attach it in the header using which we are going to login the user",
        "operationId": "POST_v1-auth-basic",
        "parameters": [
        {
          "in": "header",
          "name": "content-type",
          "schema": {
            "type": "string",
            "example": "application/json"
          },
          "required": true
        },
        {
          "in": "header",
          "name": "authorization",
          "schema": {
            "type": "string",
            "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjdmYzkwYmU4LTcyNDUtNGZhNy1hM2ZjLTBlNGI3NGZjODc2MCJ9.eyJpZCI6IjY5MmZjZDQ1LTk1YjEtNGIyNS04YmQyLTU5NDIwOTkwMDRiYyIsInNlcmlhbE5vIjoiMkQwNzUxNTAwMDAxMDE5ODQ1NjEiLCJ2aW4iOiI5YTgyOWU0YzIwYTEzMzhiMjlkZDM1Zjk1ODcwYWNhMGYwNzMxMjhiZWY4OWRiYzUxZjA0MmNjZjJmNTI2MjMwIiwicnNDb250cmFjdCI6IlZBTElEIiwidGVsZW1hdGljc0NvbnRyYWN0IjoiVkFMSUQiLCJkYXRhIjoiRU5BQkxFRCIsImlhdCI6MTcyMzUzNDU2NiwiZXhwIjoxNzM5MDg2NTY2LCJpc3MiOiJodHRwczovL2FwaS5tc2lsZGV2LnZpc3Rlb25jbG91ZC5jb20vcm91dGluZy1zZXJ2aWNlIn0.qcX9JLkkXtUMXbExZeTxAbh4syYVbA3s0-iGj50wFkU1SMh8exNA7-5GhPs3M1VENZ-Vigu2IvpI7OBN1b4kkKNhJMlk-xLEBPRPznlZsvamSNZt1eIfsJcH2yhIlnYtzaSrKOIRLvfu_QY7-Y7clG9SHEUSKr-LvVlQx6QlG6rA1sTm1KAplZUx58U8O-ZRonBAPGM8Pbe399MBdHISyJ7qyDJlX7k9BMF7N4Jy6DK16MZIh8d0nZ79-dvN0UznwSnk7Hd793mEI77Z--cCJleSwBIwnmstSEcpfC5puP9Tahjf1EL5VWrDk1rClKHS-pnQ4Pa1YjBojD5IJGBO7w"
          },
          "required": true
        }
      ],

      "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "tenantName": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "tenantName"
                    ]
                  }
                ]
              }
            }
          },
          "required": true
        },
        "security": [
                    {
                        "Bearer": []
                    }
                ]
      }
    },
    "/v1/auth/register": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "description": "Perform user registration. If the client passes a redirect URL and the SSO requires verification, the response of the verification call will be redirected to that URL.(Currently used in developer registeration)",
        "operationId": "POST_v1-auth-register",
        "parameters": [
        {
          "in": "header",
          "name": "content-type",
          "schema": {
            "type": "string",
            "example": "application/json"
          },
          "required": true
        }
      ],"requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "thillaimaharajan.g@gmail.com"
                  },
                  "roleId": {
                    "type": "string",
                    "example": "67a89fad069cd3c52f8cff22"
                  },
                  "name": {
                    "type": "string",
                    "example": "thillai"
                  },
                  "contact": {
                    "type": "string",
                    "example": "9487316396"
                  },
                  "x-tenant-id": {
                    "type": "string",
                    "example": "67a89fad069cd3c52f8cff22"
                  }
                },
                "required": ["email", "roleId", "name", "contact","x-tenant-id"]
              }
            }
          }
        },
        "security": [
                    {
                        "Bearer": []
                    }
                ]
      }
    },
    "/v1/auth/change-password": {
      "put": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangePasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "content-type",
            "schema": {
              "type": "string",
              "example": "application/json"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "schema": {
              "type": "string",
              "example": "67a962c84aa8bc0e4063589e"
            },
            "required": false,
            "description": "Tenant ID (optional)"
          }
        ],
        "description": "Change new password",
        "operationId": "PUT_v1_change_password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "newPassword": {
                    "type": "string"
                  },
                  "oldPassword": {
                    "type": "string"
                  }
                },
                "required": [
                  "newPassword",
                  "oldPassword"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "security":[{
          "Bearer":[]
        }]
      },
      "parameters": []
    },
    "/v1/auth/logout": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "description": "Clear the data from client and server side.",
        "operationId": "POST_v1-auth-logout",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "userId": {
                    "type": "number"
                  },
                  "refreshToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "userId",
                  "refreshToken"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ChangePasswordResponse":{
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok"
          },
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Password updated."
              }
            }
          }
        }
      }
,      
      "LoginResponse":{
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok"
          },
          "data": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email",
                "example": "admin@gmail.com"
              },
              "userId": {
                "type": "string",
                "example": "67a95e6208705766eb2a4619"
              },
              "roles": {
                "type": "string",
                "example": "scribble_admin"
              },
              "scopes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": ["sso.write"]
              },
              "accessToken": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ2IjoyLCJ..."
              },
              "refreshToken": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoic..."
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2025-02-10T02:03:14.080Z"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2025-02-10T02:03:14.080Z"
              }
            }
          }
        }
      },
      
        "TenantResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "example": "ok"
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Tenant created successfully"
                },
                "tenant": {
                  "type": "object",
                  "properties": {
                    "tenantName": {
                      "type": "string",
                      "example": "amedysis1"
                    },
                    "databaseName": {
                      "type": "string",
                      "example": "amedysis1"
                    },
                    "createdBy": {
                      "type": "string",
                      "format": "ObjectId",
                      "example": "67a89f512d0f29cb9a87c940"
                    },
                    "_id": {
                      "type": "string",
                      "format": "ObjectId",
                      "example": "67a89fad069cd3c52f8cff1f"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-02-09T12:29:33.215Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-02-09T12:29:33.215Z"
                    },
                    "__v": {
                      "type": "integer",
                      "example": 0
                    }
                  }
                }
              }
            }
          }
        },      
        "LoginRequest":{
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "required": [
                "username",
                "password"
              ]
            }
          ]
        },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "UserResponseModel":{
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok"
          },
          "data": {
            "type": "object",
            "properties": {
              "roleId": {
                "type": "string",
                "example": "67a89fad069cd3c52f8cff22"
              },
              "tenantId": {
                "type": "string",
                "example": "67a89fad069cd3c52f8cff1f"
              },
              "email": {
                "type": "string",
                "format": "email",
                "example": "thillaimaharajan.g@gmail.com"
              },
              "password": {
                "type": "string",
                "example": "$2b$10$8/mIZz4SPDAcPkRvrbopUOtZu87JS2dFhnByr4iW5f6fO9EszyV6e"
              },
              "isVerified": {
                "type": "string",
                "example": "false"
              },
              "isDeleted": {
                "type": "string",
                "example": "false"
              },
              "loginAttempts": {
                "type": "integer",
                "example": 0
              },
              "_id": {
                "type": "string",
                "example": "67a8a17fda90d3413efda928"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "example": "2025-02-09T12:37:19.762Z"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2025-02-09T12:37:19.763Z"
              },
              "__v": {
                "type": "integer",
                "example": 0
              }
            }
          }
        }
      }
,      
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "errorCode": {
            "enum": [
              "GENERAL",
              "NOT_FOUND",
              "MISSING_DATA",
              "INVALID_DATA",
              "EXPIRED_TOKEN",
              "INVALID_TOKEN",
              "INVALID_CODE",
              "VERIFIED_ACCOUNT",
              "FEDERATED_ACCOUNT"
            ],
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        },
        "required": [
          "status",
          "errorMessage",
          "data"
        ]
      }
    },
    "responses": {},
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "links": {},
    "callbacks": {}
  }
}
