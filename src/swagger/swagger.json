{
  "openapi": "3.0.0",
  "info": {
    "title": "Appstore API spec",
    "version": "1.0"
  },
  "servers": [],
  "tags": [
    {
      "name": "Auth",
      "description": "Used by all to register & login to system"
    }   
  ],
  "paths": {
    "/v1/auth/basic": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "description": "Perform federated user authentication. This returns an extended user model with added apiKey property to use for allother requests. Basically it is login api for web portal(dev). There are 2 ways to login. 1. Email Login 2. VIN login. For VIN login, Client will get the jwt from routing server and attach it in the header using which we are going to login the user",
        "operationId": "POST_v1-auth-basic",
        "parameters": [
        {
          "in": "header",
          "name": "content-type",
          "schema": {
            "type": "string",
            "example": "application/json"
          },
          "required": true
        },
        {
          "in": "header",
          "name": "authorization",
          "schema": {
            "type": "string",
            "example": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjdmYzkwYmU4LTcyNDUtNGZhNy1hM2ZjLTBlNGI3NGZjODc2MCJ9.eyJpZCI6IjY5MmZjZDQ1LTk1YjEtNGIyNS04YmQyLTU5NDIwOTkwMDRiYyIsInNlcmlhbE5vIjoiMkQwNzUxNTAwMDAxMDE5ODQ1NjEiLCJ2aW4iOiI5YTgyOWU0YzIwYTEzMzhiMjlkZDM1Zjk1ODcwYWNhMGYwNzMxMjhiZWY4OWRiYzUxZjA0MmNjZjJmNTI2MjMwIiwicnNDb250cmFjdCI6IlZBTElEIiwidGVsZW1hdGljc0NvbnRyYWN0IjoiVkFMSUQiLCJkYXRhIjoiRU5BQkxFRCIsImlhdCI6MTcyMzUzNDU2NiwiZXhwIjoxNzM5MDg2NTY2LCJpc3MiOiJodHRwczovL2FwaS5tc2lsZGV2LnZpc3Rlb25jbG91ZC5jb20vcm91dGluZy1zZXJ2aWNlIn0.qcX9JLkkXtUMXbExZeTxAbh4syYVbA3s0-iGj50wFkU1SMh8exNA7-5GhPs3M1VENZ-Vigu2IvpI7OBN1b4kkKNhJMlk-xLEBPRPznlZsvamSNZt1eIfsJcH2yhIlnYtzaSrKOIRLvfu_QY7-Y7clG9SHEUSKr-LvVlQx6QlG6rA1sTm1KAplZUx58U8O-ZRonBAPGM8Pbe399MBdHISyJ7qyDJlX7k9BMF7N4Jy6DK16MZIh8d0nZ79-dvN0UznwSnk7Hd793mEI77Z--cCJleSwBIwnmstSEcpfC5puP9Tahjf1EL5VWrDk1rClKHS-pnQ4Pa1YjBojD5IJGBO7w"
          },
          "required": true
        }
      ],

      "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      },
                      "keepAlive": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "username",
                      "password"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "android_version": {
                        "type": "number"
                      },
                      "country": {
                        "type": "string"
                      },
                      "oem": {
                        "type": "string"
                      },
                      "model": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "android_version",
                      "country",
                      "oem",
                      "model"
                    ],
                    "description": "Requires JWT token with payload containing vin in the Authorization header."
                  }
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/auth/logout": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "description": "Clear the data from client and server side.",
        "operationId": "POST_v1-auth-logout",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "userId": {
                    "type": "number"
                  },
                  "refreshToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "userId",
                  "refreshToken"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/auth/register": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ],
        "description": "Perform user registration. If the client passes a redirect URL and the SSO requires verification, the response of the verification call will be redirected to that URL.(Currently used in developer registeration)",
        "operationId": "POST_v1-auth-register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "developer@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "123456v@7"
                  },
                  "firstname": {
                    "type": "string",
                    "example": "Android"
                  },
                  "lastname": {
                    "type": "string",
                    "example": "Developer"
                  },
                  "mobile_number": {
                    "type": "string",
                    "example": "97xxxxxx00"
                  },
                  "country_code": {
                    "type": "string",
                    "example": "91"
                  },
                  "country": {
                    "type": "string",
                    "example": "0442a27c-e00d-4ff4-8b5a-284f82562766"
                  },
                  "company": {
                    "type": "string",
                    "example": "Xyz"
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LoginResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "username": {
                "type": "string"
              },
              "firstname": {
                "type": "string"
              },
              "lastname": {
                "type": "string"
              },
              "vin": {
                "type": "string"
              },
              "company": {
                "type": "string"
              },
              "roles": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "scopes": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "accessToken": {
                "type": "string"
              },
              "refreshToken": {
                "type": "string"
              }
            }
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "UserResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "ok"
          },
          "data": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "example": "ccc45f31-c009-439d-8ba6-8d93b705e98c"
              },
              "roles": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": [
                    "dev"
                  ]
                }
              },
              "scopes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": [
                    "sso.self.read",
                    "sso.self.write",
                    "self.read",
                    "self.write",
                    "roles.read",
                    "scopes.read",
                    "devices.read",
                    "application.read",
                    "application.write",
                    "application.remove",
                    "appValidation.read",
                    "category.read",
                    "stats.read",
                    "country.read",
                    "vehicles.read",
                    "currency.read",
                    "analytics.read"
                  ]
                }
              },
              "firstname": {
                "type": "string",
                "example": "Android"
              },
              "lastname": {
                "type": "string",
                "example": "Developer"
              },
              "country": {
                "type": "string",
                "example": "0442a27c-e00d-4ff4-8b5a-284f82562766"
              },
              "company": {
                "type": "string",
                "example": "Xyz"
              },
              "isNewRegistration": {
                "type": "boolean",
                "example": true
              }
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "errorCode": {
            "enum": [
              "GENERAL",
              "NOT_FOUND",
              "MISSING_DATA",
              "INVALID_DATA",
              "EXPIRED_TOKEN",
              "INVALID_TOKEN",
              "INVALID_CODE",
              "VERIFIED_ACCOUNT",
              "FEDERATED_ACCOUNT"
            ],
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        },
        "required": [
          "status",
          "errorMessage",
          "data"
        ]
      }
    },
    "responses": {},
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "links": {},
    "callbacks": {}
  }
}
